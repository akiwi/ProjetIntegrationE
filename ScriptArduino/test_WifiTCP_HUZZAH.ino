#include <ESP8266WiFi.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

Adafruit_SSD1306 display = Adafruit_SSD1306();


#define BUTTON_A 0
#define BUTTON_B 16
#define BUTTON_C 2
#define LED      0


const char* ssid     = "";
const char* password = "";

//image du verre avec l eau
const unsigned char PROGMEM verre2 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x60, 0x00, 0x00, 0x00, 0x1F, 0xF0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x1F, 0xF0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x11, 0x10,
0x00, 0x00, 0x00, 0x00, 0x0F, 0xFB, 0x06, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x10,
0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFC, 0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x11, 0x10,
0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF8, 0x00, 0x80, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x11, 0x10,
0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0x40, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x10,
0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xF0, 0x00, 0x40, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xE0, 0x00, 0x20, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xE0, 0x00, 0x20, 0x08, 0x00, 0x00, 0x80, 0x0C, 0x00, 0x18, 0x00,
0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x10, 0x10, 0x00, 0x00, 0x80, 0x33, 0x80, 0x1F, 0x00,
0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x10, 0x10, 0x00, 0x00, 0x80, 0x40, 0x60, 0x07, 0xC0,
0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x10, 0x10, 0x00, 0x00, 0x80, 0x80, 0x1C, 0x04, 0xF0,
0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x10, 0x10, 0x00, 0x00, 0x80, 0x80, 0x03, 0x04, 0xF0,
0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x10, 0x10, 0x00, 0x00, 0x80, 0x80, 0x1C, 0x07, 0xC0,
0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x10, 0x10, 0x00, 0x00, 0x80, 0x40, 0x60, 0x1F, 0x00,
0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x10, 0x10, 0x00, 0x00, 0x80, 0x33, 0x80, 0x18, 0x00,
0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xE0, 0x00, 0x20, 0x10, 0x00, 0x00, 0x80, 0x0C, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xE0, 0x00, 0x20, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0F, 0xF0,
0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xF0, 0x00, 0x40, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1F, 0xF0,
0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xF0, 0x00, 0x40, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00,
0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF8, 0x00, 0x80, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00,
0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFC, 0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00,
0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0x06, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xF8, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1F, 0xF0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x80, 0x10, 0x00, 0x00, 0x00, 0x0F, 0xF0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const char* host = "109.133.170.117";

void setup() {
  Serial.begin(115200);
  delay(10);

  //initialisation de l ecran
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); 
  delay(1000);
  display.clearDisplay();
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  
  
  Serial.println();
  display.print("Connecting to ");
  Serial.print("Connecting to ");
  Serial.println(ssid);
  display.println(ssid);
  display.display();

  // Connection au wifi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  display.println("WiFi connected");
  Serial.println("IP address: ");
  display.println(WiFi.localIP());
  Serial.println(WiFi.localIP());
  display.display();  
}

boolean cont = true;
void loop() {
  delay(5000);
  Serial.print("connecting to ");
  Serial.println(host);

  // Utilisation de WiFiClient pour créer une connection TCP
  WiFiClient client;
  const int port = 5005;
  if (!client.connect(host, port)) {
    Serial.println("connection failed");
    return;
  }

  // Requête envoyée au serveur
  client.print("repas");
  delay(10);

  // Lecture de la réponse
  Serial.println("Respond:");
  while(client.available()){
    String line = client.readStringUntil('\r');
    display.clearDisplay();
    display.display();
    display.setCursor(0,0);
    Serial.print(line);
    display.println(line);
    delay(1000);
    //Si la requête est une demande d'eau
    if(line.equals("eau")){  
      display.clearDisplay();
      display.setCursor(0,0);
      display.drawBitmap( 0, 0, verre2, 124, 31, 1);
      display.display();
      //affichage de l image pendant 5 sec
      delay(5000);
      cont=false;
    }
  }
  //Tentative de faire fonctionner le bouton pour arreter l'alarme
  //if (!digitalRead(BUTTON_A))
  //{
    //cont=true;
    //display.clearDisplay();
    //display.println(WiFi.localIP());
    //display.display();
  //}
 
  Serial.println();
  Serial.println("closing connection");
}
